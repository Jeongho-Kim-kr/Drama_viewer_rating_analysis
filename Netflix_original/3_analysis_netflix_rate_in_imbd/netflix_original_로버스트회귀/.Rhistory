geom_boxplot(aes(fill=as.factor(Lewdness)),outlier.colour = 'red',alpha=I(0.4))+
xlab("lewdness") + ylab("점수") + labs(fill = "Lewdness")
### violence
ggplot(netflix_original,aes(x=as.factor(Violence),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Violence)),outlier.colour = 'red',alpha=I(0.4))+
xlab("violence") + ylab("점수") + labs(fill = "Violence")
### profanity
ggplot(netflix_original,aes(x=as.factor(Profanity),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Profanity)),outlier.colour = 'red',alpha=I(0.4))+
xlab("profanity") + ylab("점수") + labs(fill = "Profanity")
### fear
ggplot(netflix_original,aes(x=as.factor(Fear),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Fear)),outlier.colour = 'red',alpha=I(0.4))+
xlab("fear") + ylab("점수") + labs(fill = "Fear")
### drugs
ggplot(netflix_original,aes(x=as.factor(Drugs),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Drugs)),outlier.colour = 'red',alpha=I(0.4))+
xlab("drugs") + ylab("점수") + labs(fill = "Drugs")
### immatatable
ggplot(netflix_original,aes(x=as.factor(Immatatable),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Immatatable)),outlier.colour = 'red',alpha=I(0.4))+
xlab("immatatable") + ylab("점수") + labs(fill = "Immatatable")
## cooks distance outlier제거
### 종합 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_original <- netflix_original[-outlier, ]
### 드라마 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_drama)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_drama <- netflix_drama[-outlier, ]
### 영화 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_movie)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_movie <- netflix_movie[-outlier, ]
## 일반회귀
### 종합 데이터
fit_OLS_original <- lm(All_rating ~ . , data=netflix_original)
summary(fit_OLS_original)
anova(fit_OLS_original)
par(mfrow = c(2,2))
plot(fit_OLS_original)
### 드라마 데이터
fit_OLS_drama <- lm(All_rating ~ . , data=netflix_drama)
summary(fit_OLS_drama)
## cooks distance outlier제거
### 종합 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
## 데이터 정의
rm(list=ls())
library(readxl)
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx')
### 종합 데이터
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
### 드라마 데이터
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
### 영화 데이터
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
### 년도
library(ggplot2)
ggplot(netflix_original,aes(x=as.factor(Year),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Year)),outlier.colour = 'red',alpha=I(0.4))+
xlab("년도") + ylab("점수") + labs(fill = "년도")
### age
ggplot(netflix_original,aes(x=as.factor(Age),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Age)),outlier.colour = 'red',alpha=I(0.4))+
xlab("age") + ylab("점수") + labs(fill = "Age")
### harmful_themes
ggplot(netflix_original,aes(x=as.factor(Harmful_themes),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Harmful_themes)),outlier.colour = 'red',alpha=I(0.4))+
xlab("harmful_themes") + ylab("점수") + labs(fill = "Harmful_themes")
### lewdness
ggplot(netflix_original,aes(x=as.factor(Lewdness),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Lewdness)),outlier.colour = 'red',alpha=I(0.4))+
xlab("lewdness") + ylab("점수") + labs(fill = "Lewdness")
### violence
ggplot(netflix_original,aes(x=as.factor(Violence),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Violence)),outlier.colour = 'red',alpha=I(0.4))+
xlab("violence") + ylab("점수") + labs(fill = "Violence")
### profanity
ggplot(netflix_original,aes(x=as.factor(Profanity),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Profanity)),outlier.colour = 'red',alpha=I(0.4))+
xlab("profanity") + ylab("점수") + labs(fill = "Profanity")
### fear
ggplot(netflix_original,aes(x=as.factor(Fear),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Fear)),outlier.colour = 'red',alpha=I(0.4))+
xlab("fear") + ylab("점수") + labs(fill = "Fear")
### drugs
ggplot(netflix_original,aes(x=as.factor(Drugs),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Drugs)),outlier.colour = 'red',alpha=I(0.4))+
xlab("drugs") + ylab("점수") + labs(fill = "Drugs")
### immatatable
ggplot(netflix_original,aes(x=as.factor(Immatatable),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Immatatable)),outlier.colour = 'red',alpha=I(0.4))+
xlab("immatatable") + ylab("점수") + labs(fill = "Immatatable")
## cooks distance outlier제거
### 종합 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_original <- netflix_original[-outlier, ]
### 드라마 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_drama)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
## 데이터 정의
rm(list=ls())
library(readxl)
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx')
### 종합 데이터
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
### 드라마 데이터
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
### 영화 데이터
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
## cooks distance outlier제거
### 종합 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
## cooks distance outlier제거
### 종합 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_original <- netflix_original[-outlier, ]
### 드라마 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_drama)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_drama <- netflix_drama[-outlier, ]
### 영화 데이터
fit_tmp <- lm(All_rating ~ . , data=netflix_movie)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_movie <- netflix_movie[-outlier, ]
## 일반회귀
### 종합 데이터
fit_OLS_original <- lm(All_rating ~ . , data=netflix_original)
summary(fit_OLS_original)
anova(fit_OLS_original)
par(mfrow = c(2,2))
plot(fit_OLS_original)
### 드라마 데이터
fit_OLS_drama <- lm(All_rating ~ . , data=netflix_drama)
summary(fit_OLS_drama)
anova(fit_OLS_drama)
par(mfrow = c(2,2))
plot(fit_OLS_drama)
### 영화 데이터
fit_OLS_movie <- lm(All_rating ~ . , data=netflix_movie)
summary(fit_OLS_movie)
anova(fit_OLS_movie)
par(mfrow = c(2,2))
plot(fit_OLS_movie)
## 로버스트 회귀
library('MASS')
### 종합 데이터
fit_m_original <- rlm(All_rating ~ . , data=netflix_original)
summary(fit_m_original)
anova(fit_m_original)
par(mfrow = c(2,2))
plot(fit_m_original)
### 드라마 데이터
fit_m_drama <- rlm(All_rating ~ . , data=netflix_drama)
summary(fit_m_drama)
anova(fit_m_drama)
par(mfrow = c(2,2))
plot(fit_m_drama)
### 영화 데이터
fit_m_movie <- rlm(All_rating ~ . , data=netflix_movie)
summary(fit_m_movie)
### 드라마 데이터
fit_m_drama <- rlm(All_rating ~ . , data=netflix_drama)
### 영화 데이터
fit_m_movie <- rlm(All_rating ~ . , data=netflix_movie)
summary(fit_m_movie)
anova(fit_m_movie)
par(mfrow = c(2,2))
plot(fit_m_movie)
### 드라마 데이터
fit_m_drama <- rlm(All_rating ~ . , data=netflix_drama)
summary(fit_m_drama)
anova(fit_m_drama)
par(mfrow = c(2,2))
plot(fit_m_drama)
View(netflix_drama)
### 드라마 데이터
fit_m_drama <- rlm(All_rating ~ . , data=netflix_drama)
summary(fit_m_drama)
anova(fit_m_drama)
par(mfrow = c(2,2))
plot(fit_m_drama)
### 영화 데이터
fit_m_movie <- rlm(All_rating ~ . , data=netflix_movie)
summary(fit_m_movie)
anova(fit_m_movie)
par(mfrow = c(2,2))
plot(fit_m_movie)
### 드라마 데이터
fit_m_drama <- rlm(All_rating ~ . , data=netflix_drama)
View(netflix_movie)
knitr::opts_chunk$set(echo = TRUE, comment=NA)
rm(list=ls())
library(readxl)
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx')
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
knitr::opts_chunk$set(echo = TRUE, comment=NA)
fit_OLS_original <- lm(All_rating ~ . , data=netflix_original)
rm(list=ls())
library(readxl)
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx')
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_original <- netflix_original[-outlier, ]
fit_tmp <- lm(All_rating ~ . , data=netflix_drama)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_drama <- netflix_drama[-outlier, ]
fit_tmp <- lm(All_rating ~ . , data=netflix_movie)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix_movie <- netflix_movie[-outlier, ]
fit_OLS_original <- lm(All_rating ~ . , data=netflix_original)
summary(fit_OLS_original)
knitr::opts_chunk$set(echo = TRUE, comment=NA)
rm(list=ls())
library(readxl)
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx')
netflix <- netflix[,c(9,15,18,32:40)]
netflix <- na.omit(netflix)
netflix[, 4:12] <- lapply(netflix[, 4:12], factor)
netflix[, 1:3] <- lapply(netflix[, 1:3], as.numeric)
fit_tmp <- lm(All_rating ~ . , data=netflix)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix))]
outlier <- as.integer(na.omit(outlier))
netflix <- netflix[-outlier, ]
knitr::opts_chunk$set(echo = TRUE, comment=NA)
rm(list=ls())
library(readxl)
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx')
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix_original))]
outlier <- as.integer(na.omit(outlier))
netflix_original <- netflix_original[-outlier, ]
fit_tmp <- lm(All_rating ~ . , data=netflix_drama)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix_drama))]
outlier <- as.integer(na.omit(outlier))
netflix_drama <- netflix_drama[-outlier, ]
fit_tmp <- lm(All_rating ~ . , data=netflix_movie)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix_movie))]
outlier <- as.integer(na.omit(outlier))
netflix_movie <- netflix_movie[-outlier, ]
fit_OLS_original <- lm(All_rating ~ . , data=netflix_original)
summary(fit_OLS_original)
anova(fit_OLS_original)
par(mfrow = c(2,2))
plot(fit_OLS_original)
fit_OLS_drama <- lm(All_rating ~ . , data=netflix_drama)
summary(fit_OLS_drama)
anova(fit_OLS_drama)
par(mfrow = c(2,2))
plot(fit_OLS_drama)
fit_OLS_movie <- lm(All_rating ~ . , data=netflix_movie)
summary(fit_OLS_movie)
anova(fit_OLS_movie)
par(mfrow = c(2,2))
plot(fit_OLS_movie)
# 로버스트 회귀
library('MASS')
fit_m_original <- rlm(All_rating ~ . , data=netflix_original)
summary(fit_m_original)
anova(fit_m_original)
par(mfrow = c(2,2))
plot(fit_m_original)
fit_m_drama <- rlm(All_rating ~ . , data=netflix_drama)
anova(fit_m_drama)
par(mfrow = c(2,2))
plot(fit_m_drama)
fit_m_movie <- rlm(All_rating ~ . , data=netflix_movie)
summary(fit_m_movie)
fit_m_movie <- rlm(All_rating ~ . , data=netflix_movie)
summary(fit_m_movie)
anova(fit_m_movie)
par(mfrow = c(2,2))
plot(fit_m_movie)
knitr::opts_chunk$set(echo = TRUE, comment=NA)
rm(list=ls())
library(readxl)
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx')
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)]
netflix_original <- na.omit(netflix_original)
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor)
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric)
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
fit_tmp <- lm(All_rating ~ . , data=netflix_original)
cooks <- cooks.distance(fit_tmp)
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance")
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red")
outlier <- names(cooks)[(cooks > 4/nrow(netflix_original))]
outlier <- as.integer(na.omit(outlier))
netflix_original <- netflix_original[-outlier, ]
library(ggplot2)
ggplot(netflix_original,aes(x=as.factor(Year),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Year)),outlier.colour = 'red',alpha=I(0.4))+
xlab("년도") + ylab("점수") + labs(fill = "년도")
library(ggplot2)
ggplot(netflix_original,aes(x=as.factor(Year),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Year)),outlier.color = 'red',alpha=I(0.4))+
xlab("년도") + ylab("점수") + labs(fill = "년도")
knitr::opts_chunk$set(echo = TRUE, comment=NA)
rm(list=ls())
library(readxl) # readxl 패키지로 엑셀을 읽을 수 있게 해줌
netflix <- read_excel('netflix_original_종합_수정(sum)_(정량화보함).xlsx') # 넷플릭스 오리지널 엑셀데이터를 읽어옴
netflix_original <- netflix
netflix_original <- netflix_original[,c(9,15,18,32:40)] # 엑셀에서 9,15,18 과 32~40번째 열을 가져오는 것.
netflix_original <- na.omit(netflix_original) # 어떤 결측치라도 있으면 행을 제거하고 남은 데이터를 반환
netflix_original[, 4:12] <- lapply(netflix_original[, 4:12], factor) # 위에서 뽑은 12개 열중 4~12열을 계산을 편하게 만들어주고 factor 형태로 만들어줌
netflix_original[, 1:3] <- lapply(netflix_original[, 1:3], as.numeric) # Mean_Length, Director_max_award, All_rating (1~3열) 항목을 숫자형으로 변환
netflix_drama <- netflix[1:170,]
netflix_drama <- netflix_drama[,c(9,15,18,32:40)]
netflix_drama <- na.omit(netflix_drama)
netflix_drama[, 4:12] <- lapply(netflix_drama[, 4:12], factor)
netflix_drama[, 1:3] <- lapply(netflix_drama[, 1:3], as.numeric)
netflix_movie <- netflix[171:589,]
netflix_movie <- netflix_movie[,c(9,15,18,32:40)]
netflix_movie <- na.omit(netflix_movie)
netflix_movie[, 4:12] <- lapply(netflix_movie[, 4:12], factor)
netflix_movie[, 1:3] <- lapply(netflix_movie[, 1:3], as.numeric)
library(ggplot2)
ggplot(netflix_original,aes(x=as.factor(Year),y=All_rating))+
geom_boxplot(aes(fill=as.factor(Year)),outlier.colour = 'red',alpha=I(0.4))+
xlab("년도") + ylab("점수") + labs(fill = "년도")
4/nrow(netflix_original)
outlier <- as.integer(na.omit(outlier))
fit_tmp <- lm(All_rating ~ . , data=netflix_original) #lm :  linear regression의 핵심으로, 회귀분석, 단일 계층 분석, 공분산 분석에 이용할 수 있다.
cooks <- cooks.distance(fit_tmp) # 일반회귀를 통해 cooks 값을 구한다.
plot(cooks, pch=".", cex=1.5, main = "Plot for Cook's Distance") # cooks 시각화
# plot() 함수는 x, y 인자 2개를 기본적으로 받습니다.
# cex : 기호의 크기를 지정할 때 사용 cex에 입력하는 숫자는 디폴트인 cex=1 대비 상대적인 크기를 나타냄.
text(x=1:length(cooks), y=cooks, labels = ifelse(cooks > 4/nrow(netflix), names(cooks), ""), col = "red") # 어떤 데이터인지 plot에 표시
outlier <- names(cooks)[(cooks > 4/nrow(netflix_original))] # outlier기준: 4/(sample size)를 넘는 cooks값을 가진 데이터
outlier <- as.integer(na.omit(outlier))
par(mfrow = c(2,2)) # 한 화면에 여러 개의 그래프를 그려 비교하기 위해 par함수 사용
plot(fit_OLS_original) # fit_OLS_original의 그래프를 그려줌
